/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { PccDetails } from './pccDetails';
export interface Payload {
    businessErrorCode?: string;
    businessErrorMessage?: string;
    pccDetails?: PccDetails;
    responseBody?: string;
    status?: Payload.StatusEnum;
    statusCode?: number;
}
export declare namespace Payload {
    type StatusEnum = 'ACCEPTED' | 'ALREADY_REPORTED' | 'BAD_GATEWAY' | 'BAD_REQUEST' | 'BANDWIDTH_LIMIT_EXCEEDED' | 'CHECKPOINT' | 'CONFLICT' | 'CONTINUE' | 'CREATED' | 'DESTINATION_LOCKED' | 'EXPECTATION_FAILED' | 'FAILED_DEPENDENCY' | 'FORBIDDEN' | 'FOUND' | 'GATEWAY_TIMEOUT' | 'GONE' | 'HTTP_VERSION_NOT_SUPPORTED' | 'IM_USED' | 'INSUFFICIENT_SPACE_ON_RESOURCE' | 'INSUFFICIENT_STORAGE' | 'INTERNAL_SERVER_ERROR' | 'I_AM_A_TEAPOT' | 'LENGTH_REQUIRED' | 'LOCKED' | 'LOOP_DETECTED' | 'METHOD_FAILURE' | 'METHOD_NOT_ALLOWED' | 'MOVED_PERMANENTLY' | 'MOVED_TEMPORARILY' | 'MULTIPLE_CHOICES' | 'MULTI_STATUS' | 'NETWORK_AUTHENTICATION_REQUIRED' | 'NON_AUTHORITATIVE_INFORMATION' | 'NOT_ACCEPTABLE' | 'NOT_EXTENDED' | 'NOT_FOUND' | 'NOT_IMPLEMENTED' | 'NOT_MODIFIED' | 'NO_CONTENT' | 'OK' | 'PARTIAL_CONTENT' | 'PAYLOAD_TOO_LARGE' | 'PAYMENT_REQUIRED' | 'PERMANENT_REDIRECT' | 'PRECONDITION_FAILED' | 'PRECONDITION_REQUIRED' | 'PROCESSING' | 'PROXY_AUTHENTICATION_REQUIRED' | 'REQUESTED_RANGE_NOT_SATISFIABLE' | 'REQUEST_ENTITY_TOO_LARGE' | 'REQUEST_HEADER_FIELDS_TOO_LARGE' | 'REQUEST_TIMEOUT' | 'REQUEST_URI_TOO_LONG' | 'RESET_CONTENT' | 'SEE_OTHER' | 'SERVICE_UNAVAILABLE' | 'SWITCHING_PROTOCOLS' | 'TEMPORARY_REDIRECT' | 'TOO_EARLY' | 'TOO_MANY_REQUESTS' | 'UNAUTHORIZED' | 'UNAVAILABLE_FOR_LEGAL_REASONS' | 'UNPROCESSABLE_ENTITY' | 'UNSUPPORTED_MEDIA_TYPE' | 'UPGRADE_REQUIRED' | 'URI_TOO_LONG' | 'USE_PROXY' | 'VARIANT_ALSO_NEGOTIATES';
    const StatusEnum: {
        ACCEPTED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        ALREADYREPORTED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        BADGATEWAY: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        BADREQUEST: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        BANDWIDTHLIMITEXCEEDED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        CHECKPOINT: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        CONFLICT: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        CONTINUE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        CREATED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        DESTINATIONLOCKED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        EXPECTATIONFAILED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        FAILEDDEPENDENCY: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        FORBIDDEN: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        FOUND: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        GATEWAYTIMEOUT: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        GONE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        HTTPVERSIONNOTSUPPORTED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        IMUSED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        INSUFFICIENTSPACEONRESOURCE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        INSUFFICIENTSTORAGE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        INTERNALSERVERERROR: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        IAMATEAPOT: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        LENGTHREQUIRED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        LOCKED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        LOOPDETECTED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        METHODFAILURE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        METHODNOTALLOWED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        MOVEDPERMANENTLY: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        MOVEDTEMPORARILY: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        MULTIPLECHOICES: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        MULTISTATUS: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        NETWORKAUTHENTICATIONREQUIRED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        NONAUTHORITATIVEINFORMATION: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        NOTACCEPTABLE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        NOTEXTENDED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        NOTFOUND: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        NOTIMPLEMENTED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        NOTMODIFIED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        NOCONTENT: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        OK: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        PARTIALCONTENT: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        PAYLOADTOOLARGE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        PAYMENTREQUIRED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        PERMANENTREDIRECT: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        PRECONDITIONFAILED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        PRECONDITIONREQUIRED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        PROCESSING: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        PROXYAUTHENTICATIONREQUIRED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        REQUESTEDRANGENOTSATISFIABLE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        REQUESTENTITYTOOLARGE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        REQUESTHEADERFIELDSTOOLARGE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        REQUESTTIMEOUT: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        REQUESTURITOOLONG: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        RESETCONTENT: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        SEEOTHER: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        SERVICEUNAVAILABLE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        SWITCHINGPROTOCOLS: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        TEMPORARYREDIRECT: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        TOOEARLY: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        TOOMANYREQUESTS: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        UNAUTHORIZED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        UNAVAILABLEFORLEGALREASONS: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        UNPROCESSABLEENTITY: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        UNSUPPORTEDMEDIATYPE: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        UPGRADEREQUIRED: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        URITOOLONG: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        USEPROXY: import("./responseEntity").ResponseEntity.StatusCodeEnum;
        VARIANTALSONEGOTIATES: import("./responseEntity").ResponseEntity.StatusCodeEnum;
    };
}
