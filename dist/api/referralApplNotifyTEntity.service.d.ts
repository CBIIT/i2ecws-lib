/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpClient, HttpHeaders, HttpResponse, HttpEvent } from '@angular/common/http';
import { Observable } from 'rxjs';
import { CollectionModelReferralApplNotifyCommentsT } from '../model/collectionModelReferralApplNotifyCommentsT';
import { EntityModelReferralApplNotifyCommentsT } from '../model/entityModelReferralApplNotifyCommentsT';
import { Configuration } from '../configuration';
export declare class ReferralApplNotifyTEntityService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    constructor(httpClient: HttpClient, basePath: string, configuration: Configuration);
    /**
     * @param consumes string[] mime-types
     * @return true: consumes contains 'multipart/form-data', false: otherwise
     */
    private canConsumeForm;
    /**
     * referralApplNotifyTComments
     *
     * @param id id
     * @param referralapplnotifycommentstId referralapplnotifycommentstId
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    referralApplNotifyTCommentsUsingDELETE(id: number, referralapplnotifycommentstId: string, observe?: 'body', reportProgress?: boolean): Observable<any>;
    referralApplNotifyTCommentsUsingDELETE(id: number, referralapplnotifycommentstId: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    referralApplNotifyTCommentsUsingDELETE(id: number, referralapplnotifycommentstId: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
    /**
     * referralApplNotifyTComments
     *
     * @param id id
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    referralApplNotifyTCommentsUsingDELETE1(id: number, observe?: 'body', reportProgress?: boolean): Observable<any>;
    referralApplNotifyTCommentsUsingDELETE1(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    referralApplNotifyTCommentsUsingDELETE1(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
    /**
     * referralApplNotifyTComments
     *
     * @param id id
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    referralApplNotifyTCommentsUsingGET(id: number, observe?: 'body', reportProgress?: boolean): Observable<CollectionModelReferralApplNotifyCommentsT>;
    referralApplNotifyTCommentsUsingGET(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CollectionModelReferralApplNotifyCommentsT>>;
    referralApplNotifyTCommentsUsingGET(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CollectionModelReferralApplNotifyCommentsT>>;
    /**
     * referralApplNotifyTComments
     *
     * @param id id
     * @param referralapplnotifycommentstId referralapplnotifycommentstId
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    referralApplNotifyTCommentsUsingGET1(id: number, referralapplnotifycommentstId: string, observe?: 'body', reportProgress?: boolean): Observable<EntityModelReferralApplNotifyCommentsT>;
    referralApplNotifyTCommentsUsingGET1(id: number, referralapplnotifycommentstId: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<EntityModelReferralApplNotifyCommentsT>>;
    referralApplNotifyTCommentsUsingGET1(id: number, referralapplnotifycommentstId: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<EntityModelReferralApplNotifyCommentsT>>;
    /**
     * referralApplNotifyTComments
     *
     * @param body body
     * @param id id
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    referralApplNotifyTCommentsUsingPATCH(body: Array<string>, id: number, observe?: 'body', reportProgress?: boolean): Observable<CollectionModelReferralApplNotifyCommentsT>;
    referralApplNotifyTCommentsUsingPATCH(body: Array<string>, id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CollectionModelReferralApplNotifyCommentsT>>;
    referralApplNotifyTCommentsUsingPATCH(body: Array<string>, id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CollectionModelReferralApplNotifyCommentsT>>;
    /**
     * referralApplNotifyTComments
     *
     * @param body body
     * @param id id
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    referralApplNotifyTCommentsUsingPOST(body: Array<string>, id: number, observe?: 'body', reportProgress?: boolean): Observable<CollectionModelReferralApplNotifyCommentsT>;
    referralApplNotifyTCommentsUsingPOST(body: Array<string>, id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CollectionModelReferralApplNotifyCommentsT>>;
    referralApplNotifyTCommentsUsingPOST(body: Array<string>, id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CollectionModelReferralApplNotifyCommentsT>>;
    /**
     * referralApplNotifyTComments
     *
     * @param body body
     * @param id id
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    referralApplNotifyTCommentsUsingPUT(body: Array<string>, id: number, observe?: 'body', reportProgress?: boolean): Observable<CollectionModelReferralApplNotifyCommentsT>;
    referralApplNotifyTCommentsUsingPUT(body: Array<string>, id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CollectionModelReferralApplNotifyCommentsT>>;
    referralApplNotifyTCommentsUsingPUT(body: Array<string>, id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CollectionModelReferralApplNotifyCommentsT>>;
}
