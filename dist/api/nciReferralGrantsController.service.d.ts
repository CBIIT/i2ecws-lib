/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpClient, HttpHeaders, HttpResponse, HttpEvent } from '@angular/common/http';
import { Observable } from 'rxjs';
import { Configuration } from '../configuration';
export declare class NciReferralGrantsControllerService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    constructor(httpClient: HttpClient, basePath: string, configuration: Configuration);
    /**
     * @param consumes string[] mime-types
     * @return true: consumes contains 'multipart/form-data', false: otherwise
     */
    private canConsumeForm;
    /**
     * exportGrantSearchResults
     *
     * @param remainingParams remainingParams
     * @param activeSegments
     * @param applIds
     * @param applStatusGroupCode
     * @param araMatchStatus
     * @param cancerActivities
     * @param composedGrantNumber
     * @param dualCas
     * @param formerGrantNumber
     * @param fyFrom
     * @param fyTo
     * @param grantIc
     * @param grantMech
     * @param grantSerial
     * @param grantSuffix
     * @param grantsWitCa
     * @param grantType
     * @param grantYear
     * @param groupCode
     * @param includeDeleted
     * @param includeOrphans
     * @param institution
     * @param irgCode
     * @param irgFlexCode
     * @param myCancerActivities
     * @param ncabFrom
     * @param ncabTo
     * @param npnId
     * @param orderBy orderBy
     * @param pdAssignmentSearch
     * @param pdId
     * @param piName
     * @param referralOfficer
     * @param referralStatus
     * @param rfaPaNumber
     * @param role
     * @param roNpnId
     * @param selectFrom
     * @param sraDesignatorCode
     * @param sraFlexCode
     * @param wBSearch
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    exportGrantSearchResultsUsingGET(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;
    exportGrantSearchResultsUsingGET(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    exportGrantSearchResultsUsingGET(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
    /**
     * exportSearchResults
     *
     * @param remainingParams remainingParams
     * @param activeSegments
     * @param applIds
     * @param applStatusGroupCode
     * @param araMatchStatus
     * @param cancerActivities
     * @param composedGrantNumber
     * @param dualCas
     * @param formerGrantNumber
     * @param fyFrom
     * @param fyTo
     * @param grantIc
     * @param grantMech
     * @param grantSerial
     * @param grantSuffix
     * @param grantsWitCa
     * @param grantType
     * @param grantYear
     * @param groupCode
     * @param includeDeleted
     * @param includeOrphans
     * @param institution
     * @param irgCode
     * @param irgFlexCode
     * @param myCancerActivities
     * @param ncabFrom
     * @param ncabTo
     * @param npnId
     * @param orderBy orderBy
     * @param pdAssignmentSearch
     * @param pdId
     * @param piName
     * @param referralOfficer
     * @param referralStatus
     * @param rfaPaNumber
     * @param role
     * @param roNpnId
     * @param selectFrom
     * @param sraDesignatorCode
     * @param sraFlexCode
     * @param wBSearch
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    exportSearchResultsUsingGET(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;
    exportSearchResultsUsingGET(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    exportSearchResultsUsingGET(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
    /**
     * exportSearchResults
     *
     * @param remainingParams remainingParams
     * @param activeSegments
     * @param applIds
     * @param applStatusGroupCode
     * @param araMatchStatus
     * @param cancerActivities
     * @param composedGrantNumber
     * @param dualCas
     * @param formerGrantNumber
     * @param fyFrom
     * @param fyTo
     * @param grantIc
     * @param grantMech
     * @param grantSerial
     * @param grantSuffix
     * @param grantsWitCa
     * @param grantType
     * @param grantYear
     * @param groupCode
     * @param includeDeleted
     * @param includeOrphans
     * @param institution
     * @param irgCode
     * @param irgFlexCode
     * @param myCancerActivities
     * @param ncabFrom
     * @param ncabTo
     * @param npnId
     * @param orderBy orderBy
     * @param pdAssignmentSearch
     * @param pdId
     * @param piName
     * @param referralOfficer
     * @param referralStatus
     * @param rfaPaNumber
     * @param role
     * @param roNpnId
     * @param selectFrom
     * @param sraDesignatorCode
     * @param sraFlexCode
     * @param wBSearch
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    exportSearchResultsUsingPOST(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;
    exportSearchResultsUsingPOST(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    exportSearchResultsUsingPOST(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
    /**
     * findWithdrawnGrants
     *
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    findWithdrawnGrantsUsingGET(observe?: 'body', reportProgress?: boolean): Observable<any>;
    findWithdrawnGrantsUsingGET(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    findWithdrawnGrantsUsingGET(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
    /**
     * getSuggestedCayCodes
     *
     * @param applId applId
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    getSuggestedCayCodesUsingGET(applId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;
    getSuggestedCayCodesUsingGET(applId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    getSuggestedCayCodesUsingGET(applId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
    /**
     * searchGrantsForPDAssignment
     *
     * @param remainingParams remainingParams
     * @param activeSegments
     * @param applId applId
     * @param applIds
     * @param applStatusGroupCode
     * @param araMatchStatus
     * @param cancerActivities
     * @param composedGrantNumber
     * @param dualCas
     * @param formerGrantNumber
     * @param fyFrom
     * @param fyTo
     * @param grantIc
     * @param grantMech
     * @param grantSerial
     * @param grantSuffix
     * @param grantsWitCa
     * @param grantType
     * @param grantYear
     * @param groupCode
     * @param includeDeleted
     * @param includeOrphans
     * @param institution
     * @param irgCode
     * @param irgFlexCode
     * @param myCancerActivities
     * @param ncabFrom
     * @param ncabTo
     * @param npnId
     * @param orderBy orderBy
     * @param pdAssignmentSearch
     * @param pdId
     * @param piName
     * @param referralOfficer
     * @param referralStatus
     * @param rfaPaNumber
     * @param role
     * @param roNpnId
     * @param selectFrom
     * @param sraDesignatorCode
     * @param sraFlexCode
     * @param wBSearch
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    searchGrantsForPDAssignmentUsingGET(remainingParams: any, activeSegments?: boolean, applId?: Array<number>, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;
    searchGrantsForPDAssignmentUsingGET(remainingParams: any, activeSegments?: boolean, applId?: Array<number>, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    searchGrantsForPDAssignmentUsingGET(remainingParams: any, activeSegments?: boolean, applId?: Array<number>, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
    /**
     * searchReferralGrants
     *
     * @param remainingParams remainingParams
     * @param activeSegments
     * @param applIds
     * @param applStatusGroupCode
     * @param araMatchStatus
     * @param cancerActivities
     * @param composedGrantNumber
     * @param dualCas
     * @param formerGrantNumber
     * @param fyFrom
     * @param fyTo
     * @param grantIc
     * @param grantMech
     * @param grantSerial
     * @param grantSuffix
     * @param grantsWitCa
     * @param grantType
     * @param grantYear
     * @param groupCode
     * @param includeDeleted
     * @param includeOrphans
     * @param institution
     * @param irgCode
     * @param irgFlexCode
     * @param myCancerActivities
     * @param ncabFrom
     * @param ncabTo
     * @param npnId
     * @param orderBy orderBy
     * @param pdAssignmentSearch
     * @param pdId
     * @param piName
     * @param referralOfficer
     * @param referralStatus
     * @param rfaPaNumber
     * @param role
     * @param roNpnId
     * @param selectFrom
     * @param sraDesignatorCode
     * @param sraFlexCode
     * @param wBSearch
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    searchReferralGrantsUsingGET(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;
    searchReferralGrantsUsingGET(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    searchReferralGrantsUsingGET(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
    /**
     * searchReferralGrants
     *
     * @param remainingParams remainingParams
     * @param activeSegments
     * @param applIds
     * @param applStatusGroupCode
     * @param araMatchStatus
     * @param cancerActivities
     * @param composedGrantNumber
     * @param dualCas
     * @param formerGrantNumber
     * @param fyFrom
     * @param fyTo
     * @param grantIc
     * @param grantMech
     * @param grantSerial
     * @param grantSuffix
     * @param grantsWitCa
     * @param grantType
     * @param grantYear
     * @param groupCode
     * @param includeDeleted
     * @param includeOrphans
     * @param institution
     * @param irgCode
     * @param irgFlexCode
     * @param myCancerActivities
     * @param ncabFrom
     * @param ncabTo
     * @param npnId
     * @param orderBy orderBy
     * @param pdAssignmentSearch
     * @param pdId
     * @param piName
     * @param referralOfficer
     * @param referralStatus
     * @param rfaPaNumber
     * @param role
     * @param roNpnId
     * @param selectFrom
     * @param sraDesignatorCode
     * @param sraFlexCode
     * @param wBSearch
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    searchReferralGrantsUsingPOST(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;
    searchReferralGrantsUsingPOST(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    searchReferralGrantsUsingPOST(remainingParams: any, activeSegments?: boolean, applIds?: Array<number>, applStatusGroupCode?: Array<string>, araMatchStatus?: Array<string>, cancerActivities?: Array<string>, composedGrantNumber?: string, dualCas?: boolean, formerGrantNumber?: string, fyFrom?: number, fyTo?: number, grantIc?: string, grantMech?: string, grantSerial?: string, grantSuffix?: string, grantsWitCa?: boolean, grantType?: string, grantYear?: string, groupCode?: string, includeDeleted?: boolean, includeOrphans?: boolean, institution?: string, irgCode?: string, irgFlexCode?: string, myCancerActivities?: Array<string>, ncabFrom?: string, ncabTo?: string, npnId?: number, orderBy?: string, pdAssignmentSearch?: boolean, pdId?: number, piName?: string, referralOfficer?: number, referralStatus?: Array<string>, rfaPaNumber?: Array<string>, role?: string, roNpnId?: number, selectFrom?: string, sraDesignatorCode?: string, sraFlexCode?: string, wBSearch?: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
    /**
     * search
     *
     * @param applId applId
     * @param cancerActivity cancerActivity
     * @param grantsWithoutInterest grantsWithoutInterest
     * @param mech mech
     * @param minDaysSinceReferral minDaysSinceReferral
     * @param ncabFromDate ncabFromDate
     * @param ncabToDate ncabToDate
     * @param orderBy orderBy
     * @param pocNpnId pocNpnId
     * @param referralDateHigh referralDateHigh
     * @param referralDateLow referralDateLow
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    searchUsingGET(applId?: Array<number>, cancerActivity?: string, grantsWithoutInterest?: boolean, mech?: string, minDaysSinceReferral?: number, ncabFromDate?: string, ncabToDate?: string, orderBy?: string, pocNpnId?: number, referralDateHigh?: string, referralDateLow?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;
    searchUsingGET(applId?: Array<number>, cancerActivity?: string, grantsWithoutInterest?: boolean, mech?: string, minDaysSinceReferral?: number, ncabFromDate?: string, ncabToDate?: string, orderBy?: string, pocNpnId?: number, referralDateHigh?: string, referralDateLow?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;
    searchUsingGET(applId?: Array<number>, cancerActivity?: string, grantsWithoutInterest?: boolean, mech?: string, minDaysSinceReferral?: number, ncabFromDate?: string, ncabToDate?: string, orderBy?: string, pocNpnId?: number, referralDateHigh?: string, referralDateLow?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;
}
